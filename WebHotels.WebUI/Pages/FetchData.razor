@attribute [Authorize]
@page "/fetchdata"
@using System.Timers;
@using WebHotels.Domain.Models;
@using WebHotels.WebUI.Data
@inject EmployeesController EmployeesService

<PageTitle>Employees</PageTitle>

<h1>Employees List</h1>

<p>This component demonstrates fetching data from a service.</p>
<RadzenButton IsBusy=@busy Click="@ButtonClicked" Text="@text" min-width="300px"></RadzenButton>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Position</th>
                <th>Department</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employees)
            {
                <tr>
                    <td>@emp.Name</td>
                    <td>@emp.Surname</td>
                    <td>@emp.Position</td>
                    <td>@emp.Department</td>
                    <td>@emp.Age</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Employee>? employees;
    private string @text = "Actualizati";
    private bool @busy = false;
    private Timer _timer;

    protected override async Task OnInitializedAsync()
    {
        employees = await EmployeesService.GetEmployees();
    }

    private async Task ButtonClicked()
    {
        text = "Efectuat!";
        await Task.Delay(500);
        busy = false;
        text = "Actualizati";
        StateHasChanged();
    }
}
